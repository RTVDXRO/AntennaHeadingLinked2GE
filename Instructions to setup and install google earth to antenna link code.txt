Note: The following instructions assume that "Google Earth" has been installed and is working
      on your computer. If not, download it here:
       https://earth.google.com/download-earth.html

1. To get copies of the Google Earth KML file, and the Python Script, needed for this project
   go to this Github site: 
             https://github.com/jmharvey1/AntennaHeadingLinked2GE
   Note: a recent version of the python script is also shown close to the the bottom of this file

2. To Download & Install the WAMPS server App, go to this Sourceforge location:
           https://sourceforge.net/projects/wampserver/?source=top3_dlp_t5
     or
           http://www.wampserver.com/
   
     from either of these two locations, you should be able to download the following file
          "wampserver3.0.6_x64_apache2.4.23_mysql5.7.14_php5.6.25-7.0.10.exe"      
     or the latest equivalent.
2a. Launch the execuexecutable/installer ("wampserver3.0.6_x64....  .exe") and follow the instructions

   Note: There is a Python/WAMP Server "install & setup" video found at:
               https://www.youtube.com/watch?v=bHyiXDJVjY8
   It shows the general process for installing the WAMP server and Python Applications.

3. Once installed, Start the WAMP server process (by clicking on the Desktop App ICON)
   
3a. As shown at 2:13 in the video mentioned above,
    What your are doing is modifing, the default "httpd.conf" file,
    to support Python file calls.
    To access it ("httpd.conf"), after launching the WAMP server process,
    left click the WAMP icon, in the lower tray.
    HighLight the "Apache" folder,
    And then select "httpd.conf", in the pick list that appears.

3b. Once you open the file, use notepad's "edit>find" menu option, 
    to locate the line that reads as follows:
       "# The Options directive is both complicated and important."
3c. Once located, modify the file so that it reads as shown in step 3d.

3d. When you're done, the httpd.conf file will have been modified to read as follows: 
.
.
.   
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #
    #Options +Indexes +FollowSymLinks +Multiviews
    AddHandler cgi-script .cgi .py
    Options Indexes FollowSymLinks ExecCGI
.
.
.

3e. When you are satified that your copy of "httpd.conf" matches step 3d. save and close the file.

4. Be sure that you also downloaded and installed PYTHON,
   which can be found at:
         https://www.python.org/downloads/

5. Before you can run the Python Code used in this project, You will need to add the serial
   library for python. It can be found at:
               https://github.com/pyserial/pyserial

5a. To integrate the serial library into python, 
       unzip the downloaded file "pyserial-master.zip" to known location.

5a1. Next, your Windows10 system path variable needs to be modified to include the path to Python.
     One way to find the path is, go to your start menu and and scroll down to the python folder (group)
     expand this group &
     highlight "Idle (Python3.x..)" entry.
     Right Click and use the "more > Open File location" option.
     When that folder opens, hightlight & right-click the "IDLE (Python 3.5 64-bit)" shortcut
     open the shortcut's properties window and record the "start in" location
      (on my computer, it is: "C:\Program Files\Python35\")

5a2. Search for "Edit the System environment Variables" on the taskbar.    
     open the control panel match.
     under the "advanced" tab of the "system porperties" window, click the "environment variables" button.
     In the "System variables" section of the "enveironment variables" window, highlight the "path" entry,
     and then click the "edit" button.
     Create a "new" line entry that matches the path to python, that you recorded in step 5a1.
     (In my case, the line entry reads: C:\Program Files\Python35 ) 

5a3. To test that the above steps worked okay, 
     start a new Command Prompt (DOS Prompt) 
     and enter the command “python”. 
     You should see something like this:
 	Python 3.5.2 (v3.5.2:4def2.....)[MSC v.1900 64 bit (AMD64)] on win32
	type "help", "copyright", "credits" or "license" for more information.
	>>>>
5a4. To close Python, and to return back to the command prompt, type exit() .

5a5. Now, while still in the Dos command prompt window, navigate to your extracted "pyserial-master" folder.

5a6. Once there, enter the command: "python setup.py install" (do not include the quotes)
     this should generate quite a long respone, that ends with statements looking something like 
     the following:
          Installed c:\program files\python35\lib\site-packages\pyserial-3.2.1-py3.5.egg
          Processing dependencies for pyserial==3.2.1
          Finished procesing dependenciesnfor pyserial==3.2.1
  

6. Move/Copy the Python file ("viewCenteredPlacemark.py", downloaded from the github site, Step1) to: 
     C:\wamp64\www

   Note: For reference, this python script/file reads as follows:

#!C:\Program Files\Python35\python

import cgi
import math
from datetime import datetime
import serial
import time

# the following 3 lines will need to be modified to match your setup/ & location
center_lng = -85.198159 #Antenna's GPS Longtitude
center_lat = 35.123637 #Antenna's GPS Latitude
ser = serial.Serial('COM10', 9600, timeout=0)

url = cgi.FieldStorage()
heading = 0.0   
try:
  ser.write(b'OK2Snd\n')
  time.sleep(0.05)
  val1 = ser.readline()
  if val1:
      try:
        heading = float(val1)
      except ValueError:
        message = "Either val1 ({!r}) is not a valid number".format(val1)
        ##print("Error!", message)
        tkMessageBox.showerror("Invalid Inputs", message)  
      ##print( heading)
      ##time.sleep(0.5)
except ser.SerialTimeoutException:
  tkMessageBox.showerror("Data could not be read")


##bbox = url['BBOX'].value
##bbox = bbox.split(',')
##west = float(bbox[0])
##south = float(bbox[1])
##east = float(bbox[2])
##north = float(bbox[3])
##
##center_lng = ((east - west) / 2) + west
##center_lat = ((north - south) / 2) + south


R = 6378.1 #Radius of the Earth
brng = math.radians(heading) #heading is 90 degrees converted to radians.
d = 40              #Distance in km
d = math.pi*R*0.99  #Distance in km


lat1 = math.radians(center_lat) #Current lat point converted to radians
lon1 = math.radians(center_lng) #Current long point converted to radians

lat2 = math.asin( math.sin(lat1)*math.cos(d/R) +
     math.cos(lat1)*math.sin(d/R)*math.cos(brng))

lon2 = lon1 + math.atan2(math.sin(brng)*math.sin(d/R)*math.cos(lat1),
             math.cos(d/R)-math.sin(lat1)*math.sin(lat2))

lat2 = math.degrees(lat2)
lon2 = math.degrees(lon2)


kml = ( 
   '<?xml version="1.0" encoding="UTF-8"?>\n'
   '<kml xmlns="http://www.opengis.net/kml/2.2">\n'
   '<Document>\n'
   '<Style id="Mylinestyle">\n'
   '<LineStyle>\n'
   '<color>7f0000ff</color>\n'
   '<width>4</width>\n'
   '</LineStyle>\n'
   '</Style>\n'
   '<Placemark>\n'
   '<name>Heading: {4:.0f}</name>\n'
   '<styleUrl>#Mylinestyle</styleUrl>\n'
   '<LineString>\n'
   '<extrude>1</extrude>\n'
   '<tessellate>1</tessellate>\n'
   '<coordinates>\n'
   '{0:.14f},{1:.14f},0 {2:.14f},{3:.14f},0\n'
   '</coordinates>\n'
   '</LineString>\n'
   '</Placemark>\n'
   '</Document>\n'
   '</kml>'
   ) .format(center_lng, center_lat, lon2, lat2, heading)

print('Content-Type: application/vnd.google-earth.kml+xml\n')
print(kml)

##### End of Python Script #################

7. Before running/using the above file, modify these 3 lines: 
	center_lng = -85.198159 #Your Antenna's GPS Longtitude
	center_lat = 35.123637 #Your Antenna's GPS Latitude
	ser = serial.Serial('COM10', 9600, timeout=0)
   to match your setup.

7a. Also the first line, in the viewCenteredPlacemark.py file, which currently reads as follows:
      #!C:\Program Files\Python35\python
    It needs to be changed match your “path” to python
    So if your path to python is different, adjust this line to read:
    #!........yourpath.......\python

8. Note:
   The "d=..." line in the above python file can be modified to set the length of the
   "red heading" line as seen on Google Earth. Change this line to meet your needs.

9. Now place the kml file "networklinkTest02.kml" in any convient location. For example:
    "My Documents/GoogleEarthKMLfile"


10. That's it. If all went well. Plug in your SS Micro interface. 
   Start WAMPS. 
   Wait for the ICON to trun green. (If it doesn't turn "green", see step 11 for possible fix)
   And then start Google Earth

10a. Using the "file > Open" menu option (in Google Earth), navigate to "networklinkTest02.kml",
    and select and open it via this dialog box


10b. The first time you run Google Earth with the new KML file (and shut Google Earth down), 
    it will ask you to "Save the Temporary Places" Entry. 
    Click "yes" , and that should coplete the install process. 
-----------------------------------------------------------------------------------------------------

11   Fix for Wamp services not starting (Icon won't turn green)
11a. Search for "Turn Windows features on or off" on the taskbar.
11b. Under "Internet Information Services" deselect "World Wide Web Services" .
11c. Reboot and WAMP should now go "green".